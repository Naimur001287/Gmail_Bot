# bot.py

from telebot import TeleBot, types
from config import API_TOKEN, ADMIN_ID, RECOVERY_EMAIL
from price_manager import calculate_price
from order_handler import save_order, get_orders_text

bot = TeleBot(API_TOKEN)

user_data = {}

@bot.message_handler(commands=["start"])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("🛒 Buy Gmail")
    bot.send_message(message.chat.id,
        "👋 Welcome to Gmail Store!\nUse the button below to buy custom Gmail accounts.",
        reply_markup=markup)

@bot.message_handler(func=lambda m: m.text == "🛒 Buy Gmail")
def buy_gmail(message):
    bot.send_message(message.chat.id, "How many Gmail accounts do you want?")
    bot.register_next_step_handler(message, ask_quantity)

def ask_quantity(message):
    try:
        qty = int(message.text)
        user_data[message.chat.id] = {"quantity": qty}
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add("USA", "UK", "Germany", "Brazil", "Mexico")
        bot.send_message(message.chat.id, "Choose country:", reply_markup=markup)
        bot.register_next_step_handler(message, ask_country)
    except:
        bot.send_message(message.chat.id, "Invalid quantity. Please enter a number.")

def ask_country(message):
    user_data[message.chat.id]["country"] = message.text
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("Auto Password", "Custom Password")
    bot.send_message(message.chat.id, "Choose password option:", reply_markup=markup)
    bot.register_next_step_handler(message, ask_password)

def ask_password(message):
    if "Custom" in message.text:
        user_data[message.chat.id]["custom_pass"] = True
        bot.send_message(message.chat.id, "Enter your custom password:")
        bot.register_next_step_handler(message, get_custom_pass)
    else:
        user_data[message.chat.id]["custom_pass"] = False
        user_data[message.chat.id]["password"] = "AutoGenerated123"
        ask_2fa(message)

def get_custom_pass(message):
    user_data[message.chat.id]["password"] = message.text
    ask_2fa(message)

def ask_2fa(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("Yes", "No")
    bot.send_message(message.chat.id, "Enable 2FA?", reply_markup=markup)
    bot.register_next_step_handler(message, ask_backup)

def ask_backup(message):
    user_data[message.chat.id]["two_fa"] = True if message.text == "Yes" else False
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("Yes", "No")
    bot.send_message(message.chat.id, "Need Backup Codes?", reply_markup=markup)
    bot.register_next_step_handler(message, confirm_order)

def confirm_order(message):
    user_data[message.chat.id]["backup_code"] = True if message.text == "Yes" else False

    data = user_data[message.chat.id]
    total_price = calculate_price(data["quantity"], data["custom_pass"], data["backup_code"], data["two_fa"])
    data["price"] = total_price

    order_summary = (
        f"🛒 Your Order:\n"
        f"📦 Quantity: {data['quantity']}\n"
        f"🌐 Country: {data['country']}\n"
        f"🔑 Password: {'Custom' if data['custom_pass'] else 'Auto'}\n"
        f"🔐 2FA: {'Yes' if data['two_fa'] else 'No'}\n"
        f"📄 Backup Codes: {'Yes' if data['backup_code'] else 'No'}\n"
        f"📧 Recovery Email: {RECOVERY_EMAIL}\n"
        f"💰 Total Price: ${data['price']}\n\n"
        "Please confirm by replying: ✅ Confirm"
    )

    bot.send_message(message.chat.id, order_summary)
    bot.register_next_step_handler(message, finalize_order)

def finalize_order(message):
    if "✅" in message.text:
        data = user_data[message.chat.id]
        order = {
            "user_id": message.chat.id,
            "username": message.from_user.username,
            **data
        }
        save_order(order)
        bot.send_message(message.chat.id, "✅ Order received! We will process it shortly.")
        bot.send_message(ADMIN_ID, f"📥 New order from @{message.from_user.username}\nCheck /orders")
    else:
        bot.send_message(message.chat.id, "❌ Order canceled.")

@bot.message_handler(commands=["orders"])
def admin_orders(message):
    if message.chat.id == ADMIN_ID:
        bot.send_message(message.chat.id, get_orders_text())
    else:
        bot.send_message(message.chat.id, "You are not authorized.")

print("🤖 Bot running...")
bot.infinity_polling()
